package p01;

import lombok.SneakyThrows;


public class Spaceport {
//    Создаем класс Космодром. В классе создаем метод:
//    запуск
    @SneakyThrows
    //@SneakyThrows может использоваться для скрытого создания проверенных исключений без фактического объявления
    // этого в предложении вашего метода throws. Эту несколько спорную способность, конечно, следует использовать
    // с осторожностью. Код, сгенерированный lombok, не будет игнорировать, переносить, заменять или иным образом
    // изменять выброшенное проверенное исключение; он просто обманывает компилятор. На уровне JVM (файла класса)
    // все исключения, отмеченные или нет, могут быть выбраны независимо от throws предложения ваших методов, поэтому
    // это работает.
    public void launch(IStart rocket) { // Метод запуск принимает объект типа IStart.
    //        В методе первым делом осуществляем предстартовую проверку переданного
    //        объекта, если она провалилась(метод вернул false) выводим сообщение «Предстартовая проверка
    //        провалена».
        if (!rocket.check()) {
            System.out.println("Предстартовая проверка провалена");
            return;
        }
    // Если проверка прошла успешно, то производим запуск
    //  двигателей(вызываем метод запуска двигателя). После этого производиться обратный отсчет (10 .....
        rocket.ignition();
        for (int i = 10; i > 0; i--) {
            System.out.println(i);
            Thread.sleep(1000);
        }
        rocket.start();
    }

}
